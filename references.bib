@misc{allaireKerasInterfaceKeras2017,
  title = {Keras: {{R Interface}} to '{{Keras}}'},
  shorttitle = {Keras},
  author = {Allaire, Jj and Chollet, Fran{\c c}ois},
  year = {2017},
  month = jul,
  pages = {2.15.0},
  publisher = {Comprehensive R Archive Network},
  doi = {10.32614/CRAN.package.keras},
  url = {https://CRAN.R-project.org/package=keras},
  urldate = {2025-03-25},
  abstract = {Interface to 'Keras' {$<$}https://keras.io{$>$}, a high-level neural networks 'API'. 'Keras' was developed with a focus on enabling fast experimentation, supports both convolution based networks and recurrent networks (as well as combinations of the two), and runs seamlessly on both 'CPU' and 'GPU' devices.},
  langid = {english}
}

@misc{aybarRgeeBindingsCalling2021,
  title = {Rgee: {{R Bindings}} for {{Calling}} the '{{Earth Engine}}' {{API}}},
  shorttitle = {Rgee},
  author = {Aybar, Cesar},
  year = {2021},
  month = jan,
  pages = {1.1.7},
  publisher = {Comprehensive R Archive Network},
  doi = {10.32614/CRAN.package.rgee},
  url = {https://CRAN.R-project.org/package=rgee},
  urldate = {2025-03-25},
  abstract = {Earth Engine {$<$}https://earthengine.google.com/{$>$} client library for R. All of the 'Earth Engine' API classes, modules, and functions are made available. Additional functions implemented include importing (exporting) of Earth Engine spatial objects,  extraction of time series, interactive map display, assets management interface,  and metadata display. See {$<$}https://r-spatial.github.io/rgee/{$>$} for further details.},
  langid = {english}
}

@misc{bivandRgrassInterfaceGRASS2022,
  title = {Rgrass: {{Interface Between}} '{{GRASS}}' {{Geographical Information System}} and '{{R}}'},
  shorttitle = {Rgrass},
  author = {Bivand, Roger and Pawley, Steven},
  year = {2022},
  month = jul,
  pages = {0.5-2},
  publisher = {Comprehensive R Archive Network},
  doi = {10.32614/CRAN.package.rgrass},
  url = {https://CRAN.R-project.org/package=rgrass},
  urldate = {2025-03-25},
  abstract = {An interface between the 'GRASS' geographical information system ('GIS') and 'R', based on starting 'R' from within the 'GRASS' 'GIS' environment, or running a free-standing 'R' session in a temporary 'GRASS' location; the package provides facilities for using all 'GRASS' commands from the 'R' command line. The original interface package for 'GRASS 5' (2000-2010) is described in Bivand (2000) {$<$}doi:10.1016/S0098-3004(00)00057-1{$>$} and Bivand (2001) {$<$}https://www.r-project.org/conferences/DSC-2001/Proceedings/Bivand.pdf{$>$}. This was succeeded by 'spgrass6' for 'GRASS 6' (2006-2016) and 'rgrass7' for 'GRASS 7' (2015-present). The 'rgrass' package modernizes the interface for 'GRASS 8' while still permitting the use of 'GRASS 7'.},
  langid = {english}
}

@misc{carraroTraudemUseTauDEM2022,
  title = {Traudem: {{Use TauDEM}}},
  shorttitle = {Traudem},
  author = {Carraro, Luca and Salmon, Ma{\"e}lle and Sadek, Wael and M{\"u}ller, Kirill},
  year = {2022},
  month = oct,
  pages = {1.0.3},
  publisher = {Comprehensive R Archive Network},
  doi = {10.32614/CRAN.package.traudem},
  url = {https://CRAN.R-project.org/package=traudem},
  urldate = {2025-03-25},
  abstract = {Simple trustworthy utility functions to use TauDEM  (Terrain Analysis Using Digital Elevation Models {$<$}https://hydrology.usu.edu/taudem/taudem5/{$>$}) command-line interface. This package provides a guide to installation of TauDEM and its dependencies GDAL (Geopatial Data Abstraction Library)  and MPI (Message Passing Interface) for different operating systems. Moreover, it checks that TauDEM and its dependencies are correctly installed and included to the PATH,  and it provides wrapper commands for calling TauDEM methods from R.},
  langid = {english}
}

@techreport{doraAccelerateStateDevOps2023,
  title = {Accelerate {{State}} of {{DevOps}} 2023},
  author = {DORA},
  year = {2023},
  month = dec,
  number = {v.2023-12},
  pages = {95},
  url = {https://dora.dev/research/2023/dora-report/2023-dora-accelerate-state-of-devops-report.pdf},
  langid = {english}
}

@book{dorman_geocomputation_2025,
  title = {Geocomputation with {{Python}}},
  author = {Dorman, Michael and Graser, Anita and Nowosad, Jakub and Lovelace, Robin},
  year = {2025},
  publisher = {CRC Press},
  abstract = {Book on geographic data with Python.},
  isbn = {978-1-032-46065-9}
}

@misc{dunningtonGeosOpenSource2020,
  title = {Geos: {{Open Source Geometry Engine}} ('{{GEOS}}') {{R API}}},
  shorttitle = {Geos},
  author = {Dunnington, Dewey and Pebesma, Edzer},
  year = {2020},
  month = aug,
  pages = {0.2.4},
  publisher = {Comprehensive R Archive Network},
  doi = {10.32614/CRAN.package.geos},
  url = {https://CRAN.R-project.org/package=geos},
  urldate = {2025-03-25},
  abstract = {Provides an R API to the Open Source Geometry Engine ('GEOS') library ({$<$}https://libgeos.org/{$>$}) and a vector format  with which to efficiently store 'GEOS' geometries. High-performance functions  to extract information from, calculate relationships between, and transform geometries are provided. Finally, facilities to import  and export geometry vectors to other spatial formats are provided.},
  langid = {english}
}

@misc{hijmansTerraSpatialData2020,
  title = {Terra: {{Spatial Data Analysis}}},
  shorttitle = {Terra},
  author = {Hijmans, Robert J.},
  year = {2020},
  month = mar,
  pages = {1.8-29},
  publisher = {Comprehensive R Archive Network},
  doi = {10.32614/CRAN.package.terra},
  url = {https://CRAN.R-project.org/package=terra},
  urldate = {2025-03-25},
  abstract = {Methods for spatial data analysis with vector (points, lines, polygons) and raster (grid) data. Methods for vector data include geometric operations such as intersect and buffer. Raster methods include local, focal, global, zonal and geometric operations. The predict and interpolate methods facilitate the use of regression type (interpolation, machine learning) models for spatial prediction, including with satellite remote sensing data. Processing of very large files is supported. See the manual and tutorials on {$<$}https://rspatial.org/{$>$} to get started. 'terra' replaces the 'raster' package ('terra' can do more, and it is faster and easier to use).},
  langid = {english}
}

@book{ledouxComputationalModellingTerrains2024,
  title = {Computational Modelling of Terrains},
  author = {Ledoux, Hugo and {rroyo Ohori,}, Ken and Peters, Ravi and Pronk, Maarten},
  year = {2024},
  edition = {v2024.0},
  address = {TU Delft},
  url = {https://tudelft3d.github.io/terrainbook/},
  langid = {english},
  file = {C:\Users\TsyplenkovA\OneDrive - MWLR\ATS\Personal\zotero-library\Ledoux et al.\Ledoux et al._2024_Computational modelling of terrains.pdf}
}

@article{lindsayWhiteboxGATCase2016,
  title = {Whitebox {{GAT}}: {{A}} Case Study in Geomorphometric Analysis},
  shorttitle = {Whitebox {{GAT}}},
  author = {Lindsay, J. B.},
  year = {2016},
  month = oct,
  journal = {Computers \& Geosciences},
  volume = {95},
  pages = {75--84},
  issn = {0098-3004},
  doi = {10.1016/j.cageo.2016.07.003},
  url = {https://www.sciencedirect.com/science/article/pii/S0098300416301820},
  urldate = {2023-10-03},
  abstract = {This paper describes an open-source geographical information system (GIS) called Whitebox Geospatial Analysis Tools (Whitebox GAT). Whitebox GAT was designed to provide a platform for the rapid development and testing of experimental geospatial analysis methods, supported by its extensible design, integrated facilities for custom plug-in tool authoring, and its novel open-access design philosophy. One of the unique characteristics of Whitebox GAT is the ease with which users can inspect and modify the algorithms for individual geoprocessing tools. The open-access software model that Whitebox GAT adopts is designed to lessen the barriers that are often imposed on end-users when attempting to gain deeper understanding of how a specific function operates. While Whitebox GAT has an extensive range of GIS and remote sensing analytical capabilities, making it broadly suited for advanced scientific research applications in the Earth Sciences, this paper focusses on the software's application in the field of geomorphometry. An airborne LiDAR data set for a small headwater catchment of the Missisquoi River in northern Vermont, USA, was filtered to identify ground-points and then interpolated into a 2.0m resolution bare-Earth DEM. The DEM was processed to remove spurious off-ground objects (mainly buildings), to reduce surface roughness under heavy forest cover, and to hydrologically pre-condition the DEM. These data were then used to extract salient hydrological structures, i.e. the stream network and their associated sub-basins.},
  file = {C:\Users\TsyplenkovA\OneDrive - MWLR\ATS\Personal\zotero-library\Lindsay\Lindsay_2016_Whitebox GAT.pdf}
}

@book{lovelace_geocomputation_2025,
  title = {Geocomputation with {{R}}},
  author = {Lovelace, Robin and Nowosad, Jakub and Muenchow, Jannes},
  year = {2025},
  edition = {2},
  publisher = {CRC Press},
  abstract = {Book on geographic data with R.},
  isbn = {978-1-032-24888-2}
}

@misc{pebesmaSfSimpleFeatures2016,
  title = {Sf: {{Simple Features}} for {{R}}},
  shorttitle = {Sf},
  author = {Pebesma, Edzer},
  year = {2016},
  month = oct,
  pages = {1.0-20},
  publisher = {Comprehensive R Archive Network},
  doi = {10.32614/CRAN.package.sf},
  url = {https://CRAN.R-project.org/package=sf},
  urldate = {2025-03-25},
  abstract = {Support for simple feature access, a standardized way to encode and analyze spatial vector data. Binds to 'GDAL'  {$<$}doi:10.5281/zenodo.5884351{$>$} for reading and writing data, to 'GEOS' {$<$}doi:10.5281/zenodo.11396894{$>$} for geometrical operations, and to 'PROJ' {$<$}doi:10.5281/zenodo.5884394{$>$} for projection conversions and datum transformations. Uses by default the 's2' package for geometry operations on geodetic (long/lat degree) coordinates.},
  langid = {english}
}

@misc{tennekesTmapThematicMaps2014,
  title = {Tmap: {{Thematic Maps}}},
  shorttitle = {Tmap},
  author = {Tennekes, Martijn},
  year = {2014},
  month = jul,
  pages = {4.0},
  publisher = {Comprehensive R Archive Network},
  doi = {10.32614/CRAN.package.tmap},
  url = {https://CRAN.R-project.org/package=tmap},
  urldate = {2025-03-25},
  abstract = {Thematic maps are geographical maps in which spatial data distributions are visualized. This package offers a flexible, layer-based, and easy to use approach to create thematic maps, such as choropleths and bubble maps.},
  langid = {english}
}

@article{tesfaExtractionHydrologicalProximity2011,
  title = {Extraction of Hydrological Proximity Measures from {{DEMs}} Using Parallel Processing},
  author = {Tesfa, Teklu K. and Tarboton, David G. and Watson, Daniel W. and Schreuders, Kimberly A. T. and Baker, Matthew E. and Wallace, Robert M.},
  year = {2011},
  month = dec,
  journal = {Environmental Modelling \& Software},
  volume = {26},
  number = {12},
  pages = {1696--1709},
  issn = {1364-8152},
  doi = {10.1016/j.envsoft.2011.07.018},
  url = {https://www.sciencedirect.com/science/article/pii/S1364815211001794},
  urldate = {2025-03-24},
  abstract = {Land surface topography is one of the most important terrain properties which impact hydrological, geomorphological, and ecological processes active on a landscape. In our previous efforts to develop a soil depth model based upon topographic and land cover variables, we derived a set of hydrological proximity measures (HPMs) from a Digital Elevation Model (DEM) as potential explanatory variables for soil depth. These HPMs are variations of the distance up to ridge points (cells with no incoming flow) and variations of the distance down to stream points (cells with a contributing area greater than a threshold), following the flow path. The HPMs were computed using the D-infinity flow model that apportions flow between adjacent neighbors based on the direction of steepest downward slope on the eight triangular facets constructed in a 3~{\texttimes}~3 grid cell window using the center cell and each pair of adjacent neighboring grid cells in turn. The D-infinity model typically results in multiple flow paths between 2 points on the topography, with the result that distances may be computed as the minimum, maximum or average of the individual flow paths. In addition, each of the HPMs, are calculated vertically, horizontally, and along the land surface. Previously, these HPMs were calculated using recursive serial algorithms which suffered from stack overflow problems when used to process large datasets, limiting the size of DEMs that could be analyzed. To overcome this limitation, we developed a message passing interface (MPI) parallel approach designed to both increase the size and speed with which these HPMs are computed. The parallel HPM algorithms spatially partition the input grid into stripes which are each assigned to separate processes for computation. Each of those processes then uses a queue data structure to order the processing of cells so that each cell is visited only once and the cross-process communications that are a standard part of MPI are handled in an efficient manner. This parallel approach allows efficient analysis of much larger DEMs than were possible using the serial recursive algorithms. The HPMs given here may also have other, more general modeling applicability in hydrology, geomorphology and ecology, and so are described here from a general perspective. In this paper, we present the definitions of the HPMs, the serial and parallel algorithms used in their computation and their potential applications.}
}

@misc{usheyReticulateInterfacePython2017,
  title = {Reticulate: {{Interface}} to '{{Python}}'},
  shorttitle = {Reticulate},
  author = {Ushey, Kevin and Allaire, Jj and Tang, Yuan},
  year = {2017},
  month = mar,
  pages = {1.41.0.1},
  publisher = {Comprehensive R Archive Network},
  doi = {10.32614/CRAN.package.reticulate},
  url = {https://CRAN.R-project.org/package=reticulate},
  urldate = {2025-03-25},
  abstract = {Interface to 'Python' modules, classes, and functions. When calling into 'Python', R data types are automatically converted to their equivalent 'Python' types. When values are returned from 'Python' to R they are converted back to R types. Compatible with all versions of 'Python' {$>$}= 2.7.},
  langid = {english}
}

@article{xiongGeomorphometryTerrainAnalysis2022,
  title = {Geomorphometry and Terrain Analysis: Data, Methods, Platforms and Applications},
  shorttitle = {Geomorphometry and Terrain Analysis},
  author = {Xiong, Liyang and Li, Sijin and Tang, Guoan and Strobl, Josef},
  year = {2022},
  month = oct,
  journal = {Earth-Science Reviews},
  volume = {233},
  pages = {104191},
  issn = {0012-8252},
  doi = {10.1016/j.earscirev.2022.104191},
  url = {https://www.sciencedirect.com/science/article/pii/S0012825222002756},
  urldate = {2025-03-24},
  abstract = {Terrain is considered one of the most essential natural geographic features and is a key factor in physical processes. Geomorphometry and terrain analyses have provided a wealth of topographic data and corresponding tools, thus delivering insights into geomorphology, hydrology, soil science, and geographic information systems (GIS) in general. Recent advances in analysis theory, analysis methods, data-acquisition techniques and analysis platforms are impressive in their ability to interpret not only multiscale and multiaspect topographic characteristics but also the mechanisms and processes associated with terrain morphodynamics. In this context, we review progress in the fields of geomorphometry and terrain analysis, as well as the probable future paths of these two fields. In the data collection and construction processes, novel models and acquisition techniques can support the expression of complex terrain, and scholars have explored data-related challenges such as the accuracy and security of the utilized data. Terrain analyses have also been successful in constructing efficient analysis frameworks, transforming analysis units and methodologies, and highlighting the semantics of the analysis object as well as the continuity of Earth's surface processes. Moreover, terrain-related research and complex calculations have been aided by various analysis tools and platforms that have powerful and efficient processing capabilities. Furthermore, the application scopes of geomorphometry and terrain analysis have been broadened, especially in cross-analyses in which these techniques can be integrated with other disciplines.}
}
